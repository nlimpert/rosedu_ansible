---
- hosts: localhost
  become_user: rosedu
  become: yes

  tasks:
#  - name: Install ansible_pull settings
#    become_user: root
#    become: yes
#    roles:
#      - ansible_pull

  - name: Create mascor_ws/src directory
    file: path={{ ansible_env.HOME }}/mascor_ws/src state=directory 

  - name: Clone ur repository
    git:
      repo: 'git@git.fh-aachen.de:maskor/rosin/ur.git'
      dest: '{{ ansible_env.HOME }}/mascor_ws/src/ur'
      force: yes
      recursive: no
      accept_hostkey: yes
      update: yes
      version: master
    register: ur

#  - name: Clean the mascor_ws workspace
#    shell: catkin clean -y > /tmp/catkin_clean
#    args:
#      chdir:  '{{ ansible_env.HOME }}/mascor_ws/'
#      executable: /bin/bash
#    when: clean_build
#
#  - name: Update _external components of ur repository
#    shell: rosws update
#    args:
#      chdir:  '{{ ansible_env.HOME }}/mascor_ws/src/ur/_external'
#      executable: /bin/bash
#    when: clean_build or ur is changed
#
#  - name: Build workspace
#    shell: catkin build > /tmp/catkin_build
#    args:
#      chdir:  '{{ ansible_env.HOME }}/mascor_ws/'
#      executable: /bin/bash
#    when: clean_build or ur is changed

  - name: Clean the mascor_ws workspace
    script: catkin_usage.sh clean {{ ansible_env.HOME }}/mascor_ws/ {{ ansible_env.HOME }}
    when: clean_build

  - name: Build the mascor_ws workspace
    script: catkin_usage.sh build {{ ansible_env.HOME }}/mascor_ws/ {{ ansible_env.HOME }}
    when: clean_build


#  become_user: root
#  become: yes
#
#  tasks:
#  - name: Create crontab entry to clone/pull git repository
#    template: src=templates/etc_cron.d_ansible-pull.j2 dest=/etc/cron.d/ansible-pull owner=root group=root mode=0644
#    when: update_cronjob
#
#  - name: Create logrotate entry for ansible-pull.log
#    template: src=templates/etc_logrotate.d_ansible-pull.j2 dest=/etc/logrotate.d/ansible-pull owner=root group=root mode=0644
#    when: update_cronjob
#
#  - name: Remove unneeded swap info in fstab
#    copy: 
#      src: files/fstab
#      dest: /etc/fstab
#      owner: root
#      group: root
#      mode: 0644
#    when: update_fstab
